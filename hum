#!/bin/bash
ESC=$(printf '\033')
ymls="-f ./compose.d/base.yml"


init_dotEnv () {
  echo "OPERATION_MODE=development" >> ./.env
}

init_baseYml () {
  echo 'version: "3"' > ./compose.d/base.yml
}

init_operationModeYml () {
  echo 'version: "3"' > ./compose.d/$OPERATION_MODE.yml
}

init_gitignoredYml () {
  echo 'version: "3"' > ./compose.d/gitignored.yml
}

init_gitignore () {
  if [ ! -e ./.gitignore ]; then
    touch ./.gitignore
  fi

  # .envを.gitignoreに追記
  line=`cat ./.gitignore | grep "\.env"`
  if [ -z "$line" ]; then
    echo ".env" >> ./.gitignore
    echo ".env was not listed in .gitignore, so it was added."
  fi

  # gitignored.ymlを.gitignoreに追記
  line=`cat ./.gitignore | grep "compose\.d/gitignored\*\.yml"`
  if [ -z "$line" ]; then
    echo "compose.d/gitignored*.yml" >> ./.gitignore
    echo "gitignored.yml was not listed in .gitignore, so it was added."
  fi
}

#====================================================================================
#
# main
#
#====================================================================================

# .envの存在確認でhumを初期化するかを問う
if [ ! -e "./.env" ]; then
  read -p "Initial configuration not found, do you want to build hum initial configuration? (y/N): " yn
  case "$yn" in
    [yY]*)
      echo ".env is not found. Create .env."
      init_dotEnv
    ;;
    *)
      echo "The initial configuration of hum was canceled."
      exit 0
    ;;
  esac
fi

# プロジェクトルートの.envを読み込み一行ごとにexport
. ./.env
for line in `cat .env | grep -v -e '^\s*#' -e '^\s*$'`; do
  eval "export $line"
done

# .envにOPERATION_MODEの設定がない場合.envにOPERATION_MODEを設定し再読み込み
if [ -z $OPERATION_MODE ]; then
  echo "${ESC}[33mWARNING${ESC}[m: OPERATION_MODE is not specified. Append OPERATION_MODE to .env."
  init_dotEnv
  eval "export $(cat .env | grep '^OPERATION_MODE=')"
fi

# COMPOSE_PROJECT_NAMEの設定がない場合プロジェクトルートのディレクトリ名に
if [ -z $COMPOSE_PROJECT_NAME ]; then
  export COMPOSE_PROJECT_NAME=`basename $PWD`
fi

# OPERATION_MODEにはbaseという名前を設定できないというエラーを表示
if [ "$OPERATION_MODE" == "base" ]; then
  echo "${ESC}[31mERROR${ESC}[m: OPERATION_MODE cannot be 'base'. Please specify another name."
  exit 1
fi

# OPERATION_MODEにはgitignoredという名前は設定できないというエラーを表示
if [ "$OPERATION_MODE" == "gitignored" ]; then
  echo "${ESC}[31mERROR${ESC}[m: OPERATION_MODE cannot be 'gitignored'. Please specify another name."
  exit 1
fi

# compose.dが存在しない場合compose.dに初期構成を作成
if [ ! -e "./compose.d" ]; then
  echo "compose.d is not found. Prepare initial configuration."
  mkdir ./compose.d
  init_baseYml
  init_operationModeYml
  init_gitignoredYml
fi

# base.ymlがない場合作成
if [ ! -e "./compose.d/base.yml" ]; then
  echo "compose.d/base.yml is not found. Create base.yml."
  init_baseYml
fi

# OPERATION_MODE.ymlがない場合作成
if [ ! -e "./compose.d/$OPERATION_MODE.yml" ]; then
  echo "compose.d/$OPERATION_MODE.yml is not found. Create $OPERATION_MODE.yml."
  init_operationModeYml
fi

# gitignored.ymlがない場合作成
if [ ! -e "./compose.d/gitignored.yml" ]; then
  echo "compose.d/gitignored.yml is not found. Create gitignored.yml."
  init_gitignoredYml
fi

## gitignoreにignoreすべきファイルやディレクトリを追加
init_gitignore

ymls="-f $PWD/compose.d/base.yml -f $PWD/compose.d/$OPERATION_MODE.yml -f $PWD/compose.d/gitignored.yml"

eval "docker-compose $ymls $@"
